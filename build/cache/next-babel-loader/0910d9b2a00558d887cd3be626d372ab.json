{"ast":null,"code":"import { PrismaClient } from '@prisma/client';\nconst prisma = new PrismaClient();\nexport default async function handle(req, res) {\n  const cameraId = req.query.id;\n\n  if (req.method === 'GET') {\n    handleGET(cameraId, res);\n  } else if (req.method === 'DELETE') {\n    handleDELETE(cameraId, res);\n  } else {\n    throw new Error(`The HTTP ${req.method} method is not supported at this route.`);\n  }\n} // GET /api/post/:id\n\nasync function handleGET(cameraId, res) {\n  const cameras = await prisma.cameras.findOne({\n    where: {\n      id: Number(cameraId)\n    }\n  });\n  res.json(cameras);\n} // DELETE /api/post/:id\n\n\nasync function handleDELETE(cameraId, res) {\n  const cameras = await prisma.cameras.delete({\n    where: {\n      id: Number(cameraId)\n    }\n  });\n  res.json(cameras);\n}","map":{"version":3,"sources":["D:/Octos/desafio/pages/api/post/[id].js"],"names":["PrismaClient","prisma","handle","req","res","cameraId","query","id","method","handleGET","handleDELETE","Error","cameras","findOne","where","Number","json","delete"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,MAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;AAEA,eAAe,eAAeE,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC7C,QAAMC,QAAQ,GAAGF,GAAG,CAACG,KAAJ,CAAUC,EAA3B;;AAEA,MAAIJ,GAAG,CAACK,MAAJ,KAAe,KAAnB,EAA0B;AACxBC,IAAAA,SAAS,CAACJ,QAAD,EAAWD,GAAX,CAAT;AACD,GAFD,MAEO,IAAID,GAAG,CAACK,MAAJ,KAAe,QAAnB,EAA6B;AAClCE,IAAAA,YAAY,CAACL,QAAD,EAAWD,GAAX,CAAZ;AACD,GAFM,MAEA;AACL,UAAM,IAAIO,KAAJ,CACH,YAAWR,GAAG,CAACK,MAAO,yCADnB,CAAN;AAGD;AACF,C,CAED;;AACA,eAAeC,SAAf,CAAyBJ,QAAzB,EAAmCD,GAAnC,EAAwC;AACtC,QAAMQ,OAAO,GAAG,MAAMX,MAAM,CAACW,OAAP,CAAeC,OAAf,CAAuB;AAC3CC,IAAAA,KAAK,EAAE;AAAEP,MAAAA,EAAE,EAAEQ,MAAM,CAACV,QAAD;AAAZ;AADoC,GAAvB,CAAtB;AAGAD,EAAAA,GAAG,CAACY,IAAJ,CAASJ,OAAT;AACD,C,CAED;;;AACA,eAAeF,YAAf,CAA4BL,QAA5B,EAAsCD,GAAtC,EAA2C;AACzC,QAAMQ,OAAO,GAAG,MAAMX,MAAM,CAACW,OAAP,CAAeK,MAAf,CAAsB;AAC1CH,IAAAA,KAAK,EAAE;AAAEP,MAAAA,EAAE,EAAEQ,MAAM,CAACV,QAAD;AAAZ;AADmC,GAAtB,CAAtB;AAGAD,EAAAA,GAAG,CAACY,IAAJ,CAASJ,OAAT;AACD","sourcesContent":["import { PrismaClient } from '@prisma/client'\r\n\r\nconst prisma = new PrismaClient()\r\n\r\nexport default async function handle(req, res) {\r\n  const cameraId = req.query.id\r\n\r\n  if (req.method === 'GET') {\r\n    handleGET(cameraId, res)\r\n  } else if (req.method === 'DELETE') {\r\n    handleDELETE(cameraId, res)\r\n  } else {\r\n    throw new Error(\r\n      `The HTTP ${req.method} method is not supported at this route.`\r\n    )\r\n  }\r\n}\r\n\r\n// GET /api/post/:id\r\nasync function handleGET(cameraId, res) {\r\n  const cameras = await prisma.cameras.findOne({\r\n    where: { id: Number(cameraId) }\r\n  })\r\n  res.json(cameras)\r\n}\r\n\r\n// DELETE /api/post/:id\r\nasync function handleDELETE(cameraId, res) {\r\n  const cameras = await prisma.cameras.delete({\r\n    where: { id: Number(cameraId) },\r\n  })\r\n  res.json(cameras)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}