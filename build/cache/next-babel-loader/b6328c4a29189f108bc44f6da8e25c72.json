{"ast":null,"code":"import { PrismaClient } from '@prisma/client';\nconst prisma = new PrismaClient();\nexport default async function handle(req, res) {\n  const postId = req.query.id;\n\n  if (req.method === 'GET') {\n    handleGET(postId, res);\n  } else if (req.method === 'DELETE') {\n    handleDELETE(postId, res);\n  } else {\n    throw new Error(`The HTTP ${req.method} method is not supported at this route.`);\n  }\n} // GET /api/post/:id\n\nasync function handleGET(postId, res) {\n  const post = await prisma.post.findOne({\n    where: {\n      id: Number(postId)\n    },\n    include: {\n      author: true\n    }\n  });\n  res.json(post);\n} // DELETE /api/post/:id\n\n\nasync function handleDELETE(postId, res) {\n  const post = await prisma.post.delete({\n    where: {\n      id: Number(postId)\n    }\n  });\n  res.json(post);\n}","map":{"version":3,"sources":["D:/prisma-examples/javascript/rest-nextjs/pages/api/post/[id].js"],"names":["PrismaClient","prisma","handle","req","res","postId","query","id","method","handleGET","handleDELETE","Error","post","findOne","where","Number","include","author","json","delete"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,MAAMC,MAAM,GAAG,IAAID,YAAJ,EAAf;AAEA,eAAe,eAAeE,MAAf,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC7C,QAAMC,MAAM,GAAGF,GAAG,CAACG,KAAJ,CAAUC,EAAzB;;AAEA,MAAIJ,GAAG,CAACK,MAAJ,KAAe,KAAnB,EAA0B;AACxBC,IAAAA,SAAS,CAACJ,MAAD,EAASD,GAAT,CAAT;AACD,GAFD,MAEO,IAAID,GAAG,CAACK,MAAJ,KAAe,QAAnB,EAA6B;AAClCE,IAAAA,YAAY,CAACL,MAAD,EAASD,GAAT,CAAZ;AACD,GAFM,MAEA;AACL,UAAM,IAAIO,KAAJ,CACH,YAAWR,GAAG,CAACK,MAAO,yCADnB,CAAN;AAGD;AACF,C,CAED;;AACA,eAAeC,SAAf,CAAyBJ,MAAzB,EAAiCD,GAAjC,EAAsC;AACpC,QAAMQ,IAAI,GAAG,MAAMX,MAAM,CAACW,IAAP,CAAYC,OAAZ,CAAoB;AACrCC,IAAAA,KAAK,EAAE;AAAEP,MAAAA,EAAE,EAAEQ,MAAM,CAACV,MAAD;AAAZ,KAD8B;AAErCW,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAF4B,GAApB,CAAnB;AAIAb,EAAAA,GAAG,CAACc,IAAJ,CAASN,IAAT;AACD,C,CAED;;;AACA,eAAeF,YAAf,CAA4BL,MAA5B,EAAoCD,GAApC,EAAyC;AACvC,QAAMQ,IAAI,GAAG,MAAMX,MAAM,CAACW,IAAP,CAAYO,MAAZ,CAAmB;AACpCL,IAAAA,KAAK,EAAE;AAAEP,MAAAA,EAAE,EAAEQ,MAAM,CAACV,MAAD;AAAZ;AAD6B,GAAnB,CAAnB;AAGAD,EAAAA,GAAG,CAACc,IAAJ,CAASN,IAAT;AACD","sourcesContent":["import { PrismaClient } from '@prisma/client'\r\n\r\nconst prisma = new PrismaClient()\r\n\r\nexport default async function handle(req, res) {\r\n  const postId = req.query.id\r\n\r\n  if (req.method === 'GET') {\r\n    handleGET(postId, res)\r\n  } else if (req.method === 'DELETE') {\r\n    handleDELETE(postId, res)\r\n  } else {\r\n    throw new Error(\r\n      `The HTTP ${req.method} method is not supported at this route.`\r\n    )\r\n  }\r\n}\r\n\r\n// GET /api/post/:id\r\nasync function handleGET(postId, res) {\r\n  const post = await prisma.post.findOne({\r\n    where: { id: Number(postId) },\r\n    include: { author: true },\r\n  })\r\n  res.json(post)\r\n}\r\n\r\n// DELETE /api/post/:id\r\nasync function handleDELETE(postId, res) {\r\n  const post = await prisma.post.delete({\r\n    where: { id: Number(postId) },\r\n  })\r\n  res.json(post)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}